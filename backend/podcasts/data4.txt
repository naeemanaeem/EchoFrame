Welcome to Donsky Tech! Today, we're going to explore how to interface a DHT22 temperature and humidity sensor with your Raspberry Pi using Python.

[Intro music fades out]

The DHT22 sensor is a popular choice for monitoring temperature and humidity, and it's easy to use with the Raspberry Pi. In this tutorial, we'll be using the Python programming language to read data from the sensor.

[Visual: Close-up shot of electronic components on a green gridded cutting mat]

Here, we have the DHT22 sensor module, the Raspberry Pi Zero W, and a breakout board. The DHT22 module has only three pins: power, ground, and data. We don't need to connect any external components, as the module already has a pull-up resistor and filter capacitor.

[Visual: Slide titled "What is DHT22 Module?"]

The DHT22 module outputs temperature and humidity data on a single data line. To connect it to the Raspberry Pi, we simply need to wire the ground and VCC pins to the corresponding pins on the Pi, and the data pin to any digital pin.

[Visual: Slide titled "Wiring/Schematic"]

For this project, I'm using the Raspberry Pi Zero W, but you can use any other Raspberry Pi variant. The code for this project is available on my GitHub repository, which I'll link in the description.

[Visual: Web browser view showing a GitHub repository page]

There are two libraries you can use to connect with the DHT22 sensor: Adafruit Circuit Python DHT and Adafruit Python DHT. However, the latter is deprecated, so we'll focus on the former.

[Visual: Web browser view showing another GitHub repository]

To install the library, follow the steps on my website, which I'll link in the description. You can also check out the Adafruit Circuit Python DHT repository.

[Visual: Web browser view showing a webpage on donskytech.com]

Now, let's take a look at the code. We have two Python files: `new_dht_simpletest.py` and `old_dht_simpletest.py`. The new file uses the Adafruit Circuit Python DHT library, while the old file uses the deprecated library.

[Visual: Terminal window with a black background and green/white text]

Let's run the new file first. As you can see, we're able to retrieve the temperature and humidity values. If you see a "pull buffer" message, just ignore it.

[Visual: Terminal window output]

If we hold the sensor, you can see that the humidity reading changes. This shows that the sensor is working correctly.

[Visual: Split screen: Terminal output and physical hardware setup]

Now, let's take a look at the code for the new file. It's quite simple: we import the necessary libraries, create a DHT device object, and continually loop to read the temperature and humidity.

[Visual: Terminal window showing the nano text editor]

The old library is similar, but it uses a different import statement and a `read_retry` method.

[Visual: Terminal window showing the nano text editor]

That's it! With these two libraries, you can easily read data from the DHT22 sensor using your Raspberry Pi and Python.

[Outro music starts]

Thanks for watching, and happy exploring! Don't forget to check out my GitHub repository and website for more projects and tutorials.